upstream public_ui {
  server 127.0.0.1:4455;
}
upstream public_api {
  server 127.0.0.1:4433;
  # server unix:/tmp/backend3;  # We can load balance the traffic to support scaling
}
# upstream admin_api {
#   server 127.0.0.1:4434;
# }
server {
  listen      443 ssl http2;
  server_name sso.jerryc05.icu;
  include     ssl.conf;

  location ~ '^/(?:self-service|sessions|\.well-known)/' {
    proxy_pass              http://public_api;
    proxy_redirect          off;
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location / {
    proxy_pass              http://public_ui;
  }

  # location /admin {
  #   # Example of managing access control
  #   # for the /admin endpoint
  #   # in that example we allow access
  #   # either from the subnet
  #   # or by checking query parameter ?secret=
  #               set $allow 0;
  #   # Check against remote address
  #               if ($remote_addr ~* "172.24.0.*") {
  #                       set $allow 1;
  #               }
  #   # Check against ?secret param
  #               if ($arg_secret = "GuQ8alL2") {
  #                       set $allow 1;
  #               }
  #               if ($allow = 0) {
  #                       return 403;
  #               }

  #               rewrite /admin/(.*) /$1  break;



  #   proxy_pass http://admin_api;
  #   proxy_redirect          off;
  #   proxy_set_header        Host            $host;
  #   proxy_set_header        X-Real-IP       $remote_addr;
  #   proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
  # }

#     location /identities {
#                 proxy_pass http://admin_api;
#                 proxy_redirect          off;
#                 proxy_set_header        Host            $host;
#                 proxy_set_header        X-Real-IP       $remote_addr;
#                 proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
#     }
}