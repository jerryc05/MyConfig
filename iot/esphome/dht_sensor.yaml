wifi:
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
  - ssid: !secret wifi_ssid2
    password: !secret wifi_password2























sensor:


    
  - platform: gpio
    pin:
    name: "PIR Sensor"
    device_class: motion
    filters:
      - delayed_off: 4500ms




  - platform: dht
    # update_interval: 60s
    pin: D2
    model: AUTO_DETECT
    temperature:
      id: t
      name: "Temp"
      accuracy_decimals: 3
    humidity:
      id: h
      name: "Rel Humid"
      accuracy_decimals: 2 

  - platform: template
    # update_interval: 60s 
    id: hi
    name: "Heat Index"
    unit_of_measurement: "Â°C"
    icon: "mdi:thermometer"
    device_class: "temperature"
    state_class: "measurement"
    accuracy_decimals: 3
    lambda: |-
      auto temperature = (id(t).state * 9.0) / 5.0 + 32;
      auto percentHumidity = id(h).state;

      // Taken directly from [DHT::computeHeatIndex()] library 
      auto hi = 0.5 * (temperature + 61.0 + ((temperature - 68.0) * 1.2) +
                  (percentHumidity * 0.094));

      if (hi > 79) {
        hi = -42.379 + 2.04901523 * temperature + 10.14333127 * percentHumidity +
             -0.22475541 * temperature * percentHumidity +
             -0.00683783 * pow(temperature, 2) +
             -0.05481717 * pow(percentHumidity, 2) +
             0.00122874 * pow(temperature, 2) * percentHumidity +
             0.00085282 * temperature * pow(percentHumidity, 2) +
             -0.00000199 * pow(temperature, 2) * pow(percentHumidity, 2);

        if ((percentHumidity < 13) && (temperature >= 80.0) &&
            (temperature <= 112.0))
          hi -= ((13.0 - percentHumidity) * 0.25) *
                sqrt((17.0 - abs(temperature - 95.0)) * 0.05882);

        else if ((percentHumidity > 85.0) && (temperature >= 80.0) &&
                 (temperature <= 87.0))
          hi += ((percentHumidity - 85.0) * 0.1) * ((87.0 - temperature) * 0.2);  
      }

      hi = (hi - 32.0) * 5.0 / 9.0;

      // Update text sensor
      if      (hi < 32) id(hirl).publish_state("LOW");
      else if (hi < 39) id(hirl).publish_state("MODERATE");
      else if (hi < 46) id(hirl).publish_state("HIGH");
      else              id(hirl).publish_state("EXTREME");

      return hi;





 


  - platform: wifi_signal
    id: wifi_signal_db
    name: "WiFi Signal dB"
    # update_interval: 60s

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal %"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: ""




text_sensor:
  - platform: template
    # update_interval: 60s
    id: hirl
    name: "Heat Index Risk Level"
    icon: "mdi:thermometer"

